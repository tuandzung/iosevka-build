# This is a basic workflow to help you get started with Actions

name: Release Tepiosevka Nerd Font

on:
  schedule:
    - cron: '31 0 */2 * *'
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  check-and-build:
    runs-on: ubuntu-latest
    steps:
      - name: Check for new Iosevka tag
        id: check-tag
        run: |
          LATEST_TAG=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" https://api.github.com/repos/be5invis/Iosevka/tags | jq -r '.[0].name')
          echo "Latest Iosevka tag: $LATEST_TAG"
          LATEST_VERSION=$(echo $LATEST_TAG | sed 's/v//')

          CURRENT_ARCHIVE=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" https://api.github.com/repos/${{ github.repository }}/contents/ | jq -r '.[] | select(.name | test("IosevkaMyCustom_.*\\.zip")) | .name' | head -n 1)
          if [ -n "$CURRENT_ARCHIVE" ]; then
            CURRENT_VERSION=$(echo $CURRENT_ARCHIVE | sed -E 's/IosevkaMyCustom_(.*)\.zip/\1/')
          else
            CURRENT_VERSION=""
          fi

          if [ -z "$CURRENT_VERSION" ] || [ "$LATEST_VERSION" != "$CURRENT_VERSION" ]; then
            echo "NEW_TAG=true" >> $GITHUB_OUTPUT
            echo "LATEST_TAG=$LATEST_TAG" >> $GITHUB_OUTPUT
          else
            echo "No new version to build."
          fi

      - name: Checkout own repository
        if: steps.check-tag.outputs.NEW_TAG == 'true'
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        if: steps.check-tag.outputs.NEW_TAG == 'true'
        uses: actions/setup-node@v4
        with:
          node-version: 'lts/*'

      - name: Install ttfautohint & fontforge
        if: steps.check-tag.outputs.NEW_TAG == 'true'
        run: |
          sudo apt install --no-install-recommends -yqq \
            ttfautohint \
            fontforge \
            python3-fontforge \
            parallel

      - name: Clone Iosevka repository
        if: steps.check-tag.outputs.NEW_TAG == 'true'
        run: |
          git clone --depth 1 --branch ${{ steps.check-tag.outputs.LATEST_TAG }} https://github.com/be5invis/Iosevka.git

      - name: Copy private-build-plans.toml
        if: steps.check-tag.outputs.NEW_TAG == 'true'
        run: cp private-build-plans.toml Iosevka/

      - name: Download Nerd Fonts patcher scripts
        if: steps.check-tag.outputs.NEW_TAG == 'true'
        run: |
          curl -sSl https://github.com/ryanoasis/nerd-fonts/releases/latest/download/FontPatcher.zip -o FontPatcher.zip
          unzip FontPatcher.zip -d nerd

      - name: Build Tepiosevka custom font
        if: steps.check-tag.outputs.NEW_TAG == 'true'
        working-directory: Iosevka
        run: |
          npm install
          npm run build -- ttf::Tepiosevka

      - name: Patch Tepiosevka with Nerd Fonts
        if: steps.check-tag.outputs.NEW_TAG == 'true'
        run: |
          mkdir -p TepiosevkaNerd
          find Iosevka/dist/Tepiosevka/TTF -type f \
                \( -iname '*.otf' -o -iname '*.ttf' -o -iname '*.woff' -o -iname '*.eot' -o -iname '*.ttc' \) -print0 \
          | parallel --verbose --null "--jobs=1" fontforge -script nerd/font-patcher -out ./TepiosevkaNerd $args {}

      - name: Display structure of created files
        run: ls -R ./TepiosevkaNerd
